(dexp(k,rate=lambda,log=FALSE))
k=8
lambda=1/10
(mean(10))
(-k/mean(10))
(prob_8y=exp((-8/10)))
(dexp(k,rate=lambda,log=FALSE))
k=8
lambda=1/10
(mean(10))
(-k/mean(10))
(exp(-0.8))
(prob_8y=exp((-8/10)))
(dexp(k,rate=lambda,log=FALSE))
k=8
lambda=1/10
(mean(10))
(-k/mean(10))
(exp(-0.8))
(prob_8y=exp((-8/10)))
(dexp(10,rate=lambda,log=FALSE))
k=8
lambda=1/10
(mean(10))
(-k/mean(10))
(exp(-0.8))
(prob_8y=exp((-8/10)))
(dexp(9,rate=lambda,log=FALSE))
k=8
lambda=1/10
(mean(10))
(-k/mean(10))
(exp(-0.8))
(prob_8y=exp((-8/lambda)))
(dexp(,rate=lambda,log=FALSE))
k=8
lambda=1/10
(mean(10))
(-k/mean(10))
(exp(-0.8))
(prob_8y=exp((-8/10)))
(dexp(10,rate=lambda,log=FALSE))
k=8
lambda=1/10
(mean(10))
(-k/mean(10))
(exp(-0.8))
(prob_8y=exp((-8/(1/lambda))))
(dexp(10,rate=lambda,log=FALSE))
k=8
lambda=1/10
(mu=1/lambda)
(-k/mu)
(exp(-0.8))
(prob_8y=exp((-8/(1/lambda))))
(dexp(10,rate=lambda,log=FALSE))
k=8
lambda=1/10
(mu=1/lambda)
(-k/mu)
(exp(-0.8))
(prob_8y=exp((-8/(1/lambda))))
(dexp(10,rate=mu,log=FALSE))
k=8
lambda=1/10
(mu=1/lambda)
(-k/mu)
(exp(-0.8))
(prob_8y=exp((-k/(1/lambda))))
(dexp(10,rate=1/mu,log=FALSE))
k=8
lambda=1/10
(mu=1/lambda)
(-k/mu)
(exp(-0.8))
(prob_8y=exp((-k/(1/lambda))))
(dexp(8,rate=1/mu,log=FALSE))
k=8
lambda=1/10
(mu=1/lambda)
(-k/mu)
(exp(-0.8))
(prob_8y=exp((-k/(1/lambda))))
(dexp(-8,rate=1/mu,log=FALSE))
k=8
lambda=1/10
(mu=1/lambda)
(-k/mu)
(exp(-0.8))
(prob_8y=exp((-k/(1/lambda))))
(dexp(8,rate=1/mu,log=FALSE))
k=8
lambda=1/10
(mu=1/lambda)
(-k/mu)
(exp(-0.8))
(prob_8y=exp((-k/(1/lambda))))
(dexp(8,rate=mu,log=FALSE))
k=8
lambda=1/10
(mu=1/lambda)
(-k/mu)
(exp(-0.8))
(prob_8y=exp((-k/(1/lambda))))
(dexp(9,rate=mu,log=FALSE))
k=8
lambda=1/10
(mu=1/lambda)
(-k/mu)
(exp(-0.8))
(prob_8y=exp((-k/(1/lambda))))
(dexp(2,rate=mu,log=FALSE))
k=8
lambda=1/10
(mu=1/lambda)
(-k/mu)
(exp(-0.8))
(prob_8y=exp((-k/(1/lambda))))
k=8
lambda=1/10
(mu=1/lambda)
(prob_8y=exp((-k/(1/lambda))))
(prob_8y=exp((-k/(mu))))
k=8
lambda=1/10
mu=1/lambda
(prob_8y=exp((-k/(mu))))
k=8
lambda=1/10
mu=1/lambda
(prob_8y=exp((-k/(mu))))
(dexp(k,rate=mu,log=FALSE))
k=8
lambda=1/10
mu=1/lambda
(prob_8y=exp((-k/(mu))))
(dexp(10,rate=mu,log=FALSE))
k=8
lambda=1/10
mu=1/lambda
(prob_8y=exp((-k/(mu))))
(EV=1/lambda)
(EV=mu)
(EV=1/lambda)
(EV=mu)
(EV=mu)
(sd=sqrt(1/lambda^2))
x=0
(1-(p^x)*((1-p)^(n-x)))
(dbinom(8,10,.1,log-FALSE))
x=0
(1-(p^x)*((1-p)^(n-x)))
(dbinom(8,10,.1,log=FALSE))
x=0
(1-(p^x)*((1-p)^(n-x)))
(dbinom(8,10,.1,log=FALSE))
pbinom(2,10,.1,tail=TRUE,log.p=FALSE)
x=0
(1-(p^x)*((1-p)^(n-x)))
(dbinom(8,10,.1,log=FALSE))
pbinom(2,10,.1,log.p=FALSE)
(n)
x=8
((1-(p^x))*((1-p)^(n-x)))
(dbinom(8,10,.1,log=FALSE))
pbinom(2,10,.1,log.p=FALSE)
(n=10)
x=8
((1-(p^x))*((1-p)^(n-x)))
(dbinom(8,10,.1,log=FALSE))
pbinom(2,10,.1,log.p=FALSE)
(n=10)
x=8
((1-(p^x))*((1-p)^(n-x)))
(n=10)
x=8
(1-p^x)
((1-(p^x))*((1-p)^(n-x)))
(n=10)
x=8
(p^x)
(1-p^x)
((1-(p^x))*((1-p)^(n-x)))
(n=10)
x=8
(p^x)
(1-p^x)
((1-p)^(n-x)))
(n=10)
x=8
(p^x)
(1-p^x)
((1-p)^(n-x))
((1-(p^x))*((1-p)^(n-x)))
(n=10)
(x=0)
(p^x)
(1-p^x)
((1-p)^(n-x))
((1-(p^x))*((1-p)^(n-x)))
(n=10)
(x=0)
(p^x)
(1-p^x)
((1-p)^(n-x))
(1-((p^x)*((1-p)^(n-x))))
(n=10)
(x=0)
(p^x)
((1-p)^(n-x))
(1-((p^x)*((1-p)^(n-x))))
(n=10)
(x=1)
(p^x)
((1-p)^(n-x))
(1-((p^x)*((1-p)^(n-x))))
(n=10)
(x=1)
(p^x)
(1-p)
((1-p)^(n-x))
(1-((p^x)*((1-p)^(n-x))))
(n=10)
(x=9)
(p^x)
((1-p)^(n-x))
(1-((p^x)*((1-p)^(n-x))))
(n=10)
(x=2)
(p^x)
((1-p)^(n-x))
(1-((p^x)*((1-p)^(n-x))))
(n=10)
(x=2)
(p^x)
((1-p)^(n-x))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
(n=10)
(x=8)
(p^x)
((1-p)^(n-x))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
(n=10)
(x=8)
(p^x)
((1-p)^(n-x))
((p^x)*((1-p)^(n-x))))
(n=10)
(x=8)
(p^x)
((1-p)^(n-x))
((p^x)*((1-p)^(n-x)))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
(n=10)
(x=8)
(p^x)
((1-p)^(n-x))
((p^x)*((1-p)^(n-x)))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
choose(10,9)
(n=10)
(x=8)
(p^x)
((1-p)^(n-x))
((p^x)*((1-p)^(n-x)))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
choose(10,8)
(n=10)
(x=8)
(p^x)
((1-p)^(n-x))
((p^x)*((1-p)^(n-x)))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
(choose(n,x)*p^x*(1-p)^n-x))
(n=10)
(x=8)
(p^x)
((1-p)^(n-x))
((p^x)*((1-p)^(n-x)))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
((choose(n,x)*p^x*(1-p)^n-x))
(n=10)
(x=8)
(p^x)
((1-p)^(n-x))
((p^x)*((1-p)^(n-x)))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
(choose(n,x)*p^x*(1-p)^n-x))
(n=10)
(x=8)
(p^x)
((1-p)^(n-x))
((p^x)*((1-p)^(n-x)))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
(choose(n,x)*p^x*(1-p)^(n-x))
(n=10)
(x=9)
(p^x)
((1-p)^(n-x))
((p^x)*((1-p)^(n-x)))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
(choose(n,x)*p^x*(1-p)^(n-x))
(n=10)
(x=8)
(p^x)
((1-p)^(n-x))
((p^x)*((1-p)^(n-x)))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
(choose(n,x)*p^x*(1-p)^(n-x))
(n=9)
(x=8)
(p^x)
((1-p)^(n-x))
((p^x)*((1-p)^(n-x)))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
(choose(n,x)*p^x*(1-p)^(n-x))
(n=10)
(x=9)
(p^x)
((1-p)^(n-x))
((p^x)*((1-p)^(n-x)))
(binom_prob=1-((p^x)*((1-p)^(n-x))))
(choose(n,x)*p^x*(1-p)^(n-x))
(n=10)
(x=9)
(binom_prob=1-((p^x)*((1-p)^(n-x))))
(choose(n,x)*p^x*(1-p)^(n-x))
(n=10)
(x=9)
(binom_prob=1-((p^x)*((1-p)^(n-x))))
(choose(n,x)*p^x*((1-p)^(n-x)))
(n=10)
(x=8)
(choose(n,x)*p^x*((1-p)^(n-x)))
knitr::opts_chunk$set(echo = TRUE)
Library(matlib)
library(matlib)
num = 20
ht_5_6
num = 20
ht_5_6 = 3*(5*12+6)
ht_5_8 = 5*(5*12+8)
ht_5_10 = 4*(5*12+10)
ht_6 = 4*6*12
ht_6_2 = 4*(6*12+2)
Exp_height = (ht_5_6 + ht_5_8 + ht_5_10 + ht_6 + ht_6_2)/num
Exp_height/12
num = 20
ht_5_6 = 3*(5*12+6)
ht_5_8 = 5*(5*12+8)
ht_5_10 = 4*(5*12+10)
ht_6 = 4*6*12
ht_6_2 = 4*(6*12+2)
Exp_height = (ht_5_6 + ht_5_8 + ht_5_10 + ht_6 + ht_6_2)/num
mean(ht_5_6 + ht_5_8 + ht_5_10 + ht_6 + ht_6_2)
Exp_height/12
num = 20
ht_5_6 = 3*66
ht_5_8 = 5*68
ht_5_10 = 4*70
ht_6 = 4*72
ht_6_2 = 4*74
Exp_height = (ht_5_6 + ht_5_8 + ht_5_10 + ht_6 + ht_6_2)/num
mean(ht_5_6 + ht_5_8 + ht_5_10 + ht_6 + ht_6_2)
Exp_height/12
num = 20
ht_5_6 = 3*66
ht_5_8 = 5*68
ht_5_10 = 4*70
ht_6 = 4*72
ht_6_2 = 4*74
Exp_height = (ht_5_6 + ht_5_8 + ht_5_10 + ht_6 + ht_6_2)/num
Exp_height/12
# Number of students
num = 20
# Height of students in inches * number of students per height
ht_5_6 = 3*66
ht_5_8 = 5*68
ht_5_10 = 4*70
ht_6 = 4*72
ht_6_2 = 4*74
# Calculate the average height of each student
(ht_5_6 + ht_5_8 + ht_5_10 + ht_6 + ht_6_2)
Exp_height = (ht_5_6 + ht_5_8 + ht_5_10 + ht_6 + ht_6_2)/num
Exp_height/12
# Number of students
num = 20
# Height of students in inches * number of students per height
ht_5_6 = 3*66
ht_5_8 = 5*68
ht_5_10 = 4*70
ht_6 = 4*72
ht_6_2 = 4*74
# Calculate the average height of each student in inches.
Exp_height = (ht_5_6 + ht_5_8 + ht_5_10 + ht_6 + ht_6_2)/num
# Calculate the average height in feet per student for the expected value.
Exp_height/12
(p(sum=9))
knitr::opts_chunk$set(echo = TRUE)
library(matlib)
(bulbs=100)
(lambdaBulb=fraction(1/100))
(bulbs=100)
(lambdaBulb=frac(1/100))
(bulbs=100)
(lambdaBulb=1/100)
(sumLambda=(100*1/1000))
# minE =
(bulbs=100)
(lambdaBulb=1/100)
(fraction(sumLambda=(100*1/1000)))
bulbs=100
lambdaBulb=1/100
(sumLambda=(bulbs*lambdaBulb))
# minE =
bulbs=100
lambdaBulb=1/1000
(sumLambda=(bulbs*lambdaBulb))
# minE =
bulbs=100
lambdaBulb=1/1000
(sumLambda=(bulbs*lambdaBulb)*100)
# minE =
bulbs=100
lambdaBulb=1/1000
(sumLambda=(bulbs*lambdaBulb)*(1/10)
# minE =
bulbs=100
lambdaBulb=1/1000
(sumLambda=(bulbs*lambdaBulb)*(1/10))
# minE =
bulbs=100
lambdaBulb=1/1000
(sumLambda=(bulbs*lambdaBulb))
# minE =
bulbs=100
lambdaBulb=1/1000
(sumLambda=(bulbs*lambdaBulb))
(minE = 1/(1/10))
# minE =
bulbs=100
lambdaBulb=1/1000
(sumLambda=(bulbs*lambdaBulb))
(minE = 1/(1/10))
# minE =
bulbs=100
lambdaBulb=1/1000
(sumLambda=(bulbs*lambdaBulb))
(minE = 1/sumLambda)
# minE =
mu = 10
vari = 100/3
sd = sqrt(100/3)
ksd = 2
k = 2/sqrt(100/3)
upper_cheb = 1/(k^2)
pmin(upper_cheb, 1)
mu = 10
vari = 100/3
sd = sqrt(vari)
ksd = 2
k = 2/sqrt(100/3)
upper_cheb = 1/(k^2)
pmin(upper_cheb, 1)
mu = 10
vari = 100/3
sd = sqrt(vari)
ksd = 2
k = ksd/sqrt(vari)
upper_cheb = 1/(k^2)
pmin(upper_cheb, 1)
ksd = 5
k = ksd/sqrt(vari)
upper_cheb = 1/(k^2)
pmin(upper_cheb, 1)
ksd = 6
k = ksd/sqrt(vari)
upper_cheb = 1/(k^2)
pmin(upper_cheb, 1)
ksd = 9
k = ksd/sqrt(vari)
upper_cheb = 1/(k^2)
pmin(upper_cheb, 1)
ksd = 20
k = ksd/sqrt(vari)
upper_cheb = 1/(k^2)
pmin(upper_cheb, 1)
knitr::opts_chunk$set(echo = TRUE)
library(matlib)
bulbs=100
lambdaBulb=1/1000
sumLambda=(bulbs*lambdaBulb)
(minE = 1/sumLambda)
mu = 10
vari = 100/3
sd = sqrt(vari)
ksd = 2
k = ksd/sqrt(vari)
upper_bnd = 1/(k^2)
pmin(upper_bnd, 1)
ksd = 5
k = ksd/sqrt(vari)
upper_bnd = 1/(k^2)
pmin(upper_bnd, 1)
ksd = 9
k = ksd/sqrt(vari)
upper_bnd = 1/(k^2)
pmin(upper_bnd, 1)
ksd = 20
k = ksd/sqrt(vari)
upper_bnd = 1/(k^2)
pmin(upper_bnd, 1)
