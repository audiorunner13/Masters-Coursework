library(jpeg)
library(ggplot2)
library(raster)
install.packages("rasterImage", dependencies = FALSE)
library(rasterImage)
Sys.setenv(RGL_USE_NULL=TRUE)
# library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
# library(OpenImageR)
# set counter limit to 20
num = 20
# read jpegs into files list
(files = list.files('/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/',pattern="\\.jpg")[1:num])
height = 1200; width = 2500; scale = 20
plot_jpg = function(path, add = FALSE)
{ jpg = readJPEG(path,native = T)  # read the file
res = dim(jpg)[2:1]  # get the resolution, [x,y]
if (!add) # initialize an empty plot area if add == FALSE
plot(1,1,xlim = c(1,res[1]),ylim = c(1,res[2]),asp=1, type = 'n', xaxs='i',yaxs='i',xaxt='n',yaxt='n',xlab='',ylab='',bty='n')
rasterImage(jpg,1,1,res[1],res[2])
}
im=array(rep(0,length(files) * height/scale * width/scale*3), dim=c(length(files), height/scale, width/scale,3))
for (i in 1:20){
temp=resize(readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1])),height/scale, width/scale)
im[i,,,]=array(temp,dim=c(1, height/scale, width/scale,3))
}
install.packages("OpenImageR")
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
# library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
# library(OpenImageR)
# set counter limit to 20
num = 20
# read jpegs into files list
(files = list.files('/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/',pattern="\\.jpg")[1:num])
height = 1200; width = 2500; scale = 20
plot_jpg = function(path, add = FALSE)
{ jpg = readJPEG(path,native = T)  # read the file
res = dim(jpg)[2:1]  # get the resolution, [x,y]
if (!add) # initialize an empty plot area if add == FALSE
plot(1,1,xlim = c(1,res[1]),ylim = c(1,res[2]),asp=1, type = 'n', xaxs='i',yaxs='i',xaxt='n',yaxt='n',xlab='',ylab='',bty='n')
rasterImage(jpg,1,1,res[1],res[2])
}
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
# library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(OpenImageR)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
# library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
# library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
# set counter limit to 20
num = 20
# read jpegs into files list
(files = list.files('/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/',pattern="\\.jpg")[1:num])
height = 1200; width = 2500; scale = 20
plot_jpg = function(path, add = FALSE)
{ jpg = readJPEG(path,native = T)  # read the file
res = dim(jpg)[2:1]  # get the resolution, [x,y]
if (!add) # initialize an empty plot area if add == FALSE
plot(1,1,xlim = c(1,res[1]),ylim = c(1,res[2]),asp=1, type = 'n', xaxs='i',yaxs='i',xaxt='n',yaxt='n',xlab='',ylab='',bty='n')
rasterImage(jpg,1,1,res[1],res[2])
}
im=array(rep(0,length(files) * height/scale * width/scale*3), dim=c(length(files), height/scale, width/scale,3))
for (i in 1:20){
temp=resize(readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1])),height/scale, width/scale)
im[i,,,]=array(temp,dim=c(1, height/scale, width/scale,3))
}
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
# set counter limit to 20
num = 20
# read jpegs into files list
(files = list.files('/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/',pattern="\\.jpg")[1:num])
height = 1200; width = 2500; scale = 20
plot_jpg = function(path, add = FALSE)
{ jpg = readJPEG(path,native = T)  # read the file
res = dim(jpg)[2:1]  # get the resolution, [x,y]
if (!add) # initialize an empty plot area if add == FALSE
plot(1,1,xlim = c(1,res[1]),ylim = c(1,res[2]),asp=1, type = 'n', xaxs='i',yaxs='i',xaxt='n',yaxt='n',xlab='',ylab='',bty='n')
rasterImage(jpg,1,1,res[1],res[2])
}
im=array(rep(0,length(files) * height/scale * width/scale*3), dim=c(length(files), height/scale, width/scale,3))
for (i in 1:20){
temp=resize(readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1])),height/scale, width/scale)
im[i,,,]=array(temp,dim=c(1, height/scale, width/scale,3))
}
Sys.setenv(RGL_USE_NULL=TRUE)
library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
library(ramify)
install.packages("ramify")
Sys.setenv(RGL_USE_NULL=TRUE)
library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
library(ramify)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
library(ramify)
# set counter limit to 20
num = 20
# read jpegs into files list
(files = list.files('/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/',pattern="\\.jpg")[1:num])
height = 1200; width = 2500; scale = 20
plot_jpg = function(path, add = FALSE)
{ jpg = readJPEG(path,native = T)  # read the file
res = dim(jpg)[2:1]  # get the resolution, [x,y]
if (!add) # initialize an empty plot area if add == FALSE
plot(1,1,xlim = c(1,res[1]),ylim = c(1,res[2]),asp=1, type = 'n', xaxs='i',yaxs='i',xaxt='n',yaxt='n',xlab='',ylab='',bty='n')
rasterImage(jpg,1,1,res[1],res[2])
}
im=array(rep(0,length(files) * height/scale * width/scale*3), dim=c(length(files), height/scale, width/scale,3))
for (i in 1:20){
temp=resize(readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1])),height/scale, width/scale)
im[i,,,]=array(temp,dim=c(1, height/scale, width/scale,3))
}
im=array(rep(0,length(files) * height/scale * width/scale*3), dim=c(length(files), height/scale, width/scale,3))
for (i in 1:20){
temp=resize(readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1])),height/scale, width/scale)
im[i,,,]=array(temp,dim=c(1, height/scale, width/scale,3))
}
im=array(rep(0,length(files) * height/scale * width/scale*3), dim=c(length(files), height/scale, width/scale,3))
for (i in 1:20){
temp=resize(readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1])),height/scale, width/scale)
im[i,,,]=array(temp,dim=c(1, height/scale, width/scale,3))
}
flat=matrix(0,20,prod(dim(im)))
for (i in 1:20) {
newim <- readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1]))
r=as.vector(im[i,,,1]; g=as.vector(im[1,,,2];b=as.vector(im[1,,,3]) flat[i,] <- t(c(r,g,b))))
flat=matrix(0,20,prod(dim(im)))
for (i in 1:20) {
newim <- readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1]))
r=as.vector(im[i,,,1]); g=as.vector(im[1,,,2]);b=as.vector(im[1,,,3]) flat[i,] <- t(c(r,g,b))))
flat=matrix(0,20,prod(dim(im)))
for (i in 1:20) {
newim <- readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1]))
r=as.vector(im[i,,,1]); g=as.vector(im[1,,,2]);b=as.vector(im[1,,,3])
flat[i,] <- t(c(r,g,b)))
flat=matrix(0,20,prod(dim(im)))
for (i in 1:20) {
newim <- readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1]))
r=as.vector(im[i,,,1]); g=as.vector(im[1,,,2]);b=as.vector(im[1,,,3])
flat[i,] <- t(c(r,g,b))
}
shoes=as.data.frame(t(flat))
flat=matrix(0,20,prod(dim(im)))
for (i in 1:20) {
newim <- readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1]))
r=as.vector(im[i,,,1]); g=as.vector(im[1,,,2]);b=as.vector(im[1,,,3])
flat[i,] <- t(c(r,g,b))
}
(shoes=as.data.frame(t(flat)))
flat=matrix(0,20,prod(dim(im)))
for (i in 1:20) {
newim <- readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1]))
r=as.vector(im[i,,,1]); g=as.vector(im[1,,,2]);b=as.vector(im[1,,,3])
flat[i,] <- t(c(r,g,b))
}
shoes=as.data.frame(t(flat))
par(mfrow=c(3,3))
par(mai=c(.3,.3,.3,.3))
for (i in 1:20){
plot_jpeg(writeJPEG(im[i,,,]))
}
library(plyr)
library(plotly)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
library(ramify)
# set counter limit to 20
num = 20
# read jpegs into files list
(files = list.files('/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/',pattern="\\.jpg")[1:num])
height = 1200; width = 2500; scale = 20
plot_jpg = function(path, add = FALSE)
{ jpg = readJPEG(path,native = T)  # read the file
res = dim(jpg)[2:1]  # get the resolution, [x,y]
if (!add) # initialize an empty plot area if add == FALSE
plot(1,1,xlim = c(1,res[1]),ylim = c(1,res[2]),asp=1, type = 'n', xaxs='i',yaxs='i',xaxt='n',yaxt='n',xlab='',ylab='',bty='n')
rasterImage(jpg,1,1,res[1],res[2])
}
im=array(rep(0,length(files) * height/scale * width/scale*3), dim=c(length(files), height/scale, width/scale,3))
for (i in 1:20){
temp=resize(readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1])),height/scale, width/scale)
im[i,,,]=array(temp,dim=c(1, height/scale, width/scale,3))
}
flat=matrix(0,20,prod(dim(im)))
for (i in 1:20) {
newim <- readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1]))
r=as.vector(im[i,,,1]); g=as.vector(im[1,,,2]);b=as.vector(im[1,,,3])
flat[i,] <- t(c(r,g,b))
}
shoes=as.data.frame(t(flat))
par(mfrow=c(3,3))
par(mai=c(.3,.3,.3,.3))
for (i in 1:20){
plot_jpeg(writeJPEG(im[i,,,]))
}
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
library(ramify)
library(Matrix)
# set counter limit to 20
num = 20
# read jpegs into files list
(files = list.files('/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/',pattern="\\.jpg")[1:num])
height = 1200; width = 2500; scale = 20
plot_jpg = function(path, add = FALSE)
{ jpg = readJPEG(path,native = T)  # read the file
res = dim(jpg)[2:1]  # get the resolution, [x,y]
if (!add) # initialize an empty plot area if add == FALSE
plot(1,1,xlim = c(1,res[1]),ylim = c(1,res[2]),asp=1, type = 'n', xaxs='i',yaxs='i',xaxt='n',yaxt='n',xlab='',ylab='',bty='n')
rasterImage(jpg,1,1,res[1],res[2])
}
im=array(rep(0,length(files) * height/scale * width/scale*3), dim=c(length(files), height/scale, width/scale,3))
for (i in 1:20){
temp=resize(readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1])),height/scale, width/scale)
im[i,,,]=array(temp,dim=c(1, height/scale, width/scale,3))
}
flat=matrix(0,20,prod(dim(im)))
for (i in 1:20) {
newim <- readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1]))
r=as.vector(im[i,,,1]); g=as.vector(im[1,,,2]);b=as.vector(im[1,,,3])
flat[i,] <- t(c(r,g,b))
}
shoes=as.data.frame(t(flat))
par(mfrow=c(3,3))
par(mai=c(.3,.3,.3,.3))
for (i in 1:20){
plot_jpeg(writeJPEG(im[i,,,]))
}
install.packages("OpenImageR")
gfortran --version I
install.packages("OpenImageR")
install.packages("OpenImageR", dependencies = FALSE)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
library(tidyverse)
par(mfrow=c(3,3))
par(mai=c(.3,.3,.3,.3))
for (i in 1:20){
plot_jpeg(writeJPEG(im[i,,,]))
}
Sys.setenv(RGL_USE_NULL=TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
library(ramify)
library(Matrix)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
library(ramify)
library(Matrix)
# set counter limit to 20
num = 20
# read jpegs into files list
(files = list.files('/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/',pattern="\\.jpg")[1:num])
height = 1200; width = 2500; scale = 20
plot_jpg = function(path, add = FALSE)
{ jpg = readJPEG(path,native = T)  # read the file
res = dim(jpg)[2:1]  # get the resolution, [x,y]
if (!add) # initialize an empty plot area if add == FALSE
plot(1,1,xlim = c(1,res[1]),ylim = c(1,res[2]),asp=1, type = 'n', xaxs='i',yaxs='i',xaxt='n',yaxt='n',xlab='',ylab='',bty='n')
rasterImage(jpg,1,1,res[1],res[2])
}
im=array(rep(0,length(files) * height/scale * width/scale*3), dim=c(length(files), height/scale, width/scale,3))
for (i in 1:20){
temp=resize(readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1])),height/scale, width/scale)
im[i,,,]=array(temp,dim=c(1, height/scale, width/scale,3))
}
flat=matrix(0,20,prod(dim(im)))
for (i in 1:20) {
newim <- readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1]))
r=as.vector(im[i,,,1]); g=as.vector(im[1,,,2]);b=as.vector(im[1,,,3])
flat[i,] <- t(c(r,g,b))
}
shoes=as.data.frame(t(flat))
par(mfrow=c(3,3))
par(mai=c(.3,.3,.3,.3))
for (i in 1:20){
plot_jpeg(writeJPEG(im[i,,,]))
}
install.packages("OpenImageR")
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
library(ramify)
library(Matrix)
# set counter limit to 20
num = 20
# read jpegs into files list
(files = list.files('/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/',pattern="\\.jpg")[1:num])
height = 1200; width = 2500; scale = 20
plot_jpg = function(path, add = FALSE)
{ jpg = readJPEG(path,native = T)  # read the file
res = dim(jpg)[2:1]  # get the resolution, [x,y]
if (!add) # initialize an empty plot area if add == FALSE
plot(1,1,xlim = c(1,res[1]),ylim = c(1,res[2]),asp=1, type = 'n', xaxs='i',yaxs='i',xaxt='n',yaxt='n',xlab='',ylab='',bty='n')
rasterImage(jpg,1,1,res[1],res[2])
}
im=array(rep(0,length(files) * height/scale * width/scale*3), dim=c(length(files), height/scale, width/scale,3))
for (i in 1:20){
temp=resize(readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1])),height/scale, width/scale)
im[i,,,]=array(temp,dim=c(1, height/scale, width/scale,3))
}
flat=matrix(0,20,prod(dim(im)))
for (i in 1:20) {
newim <- readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1]))
r=as.vector(im[i,,,1]); g=as.vector(im[1,,,2]);b=as.vector(im[1,,,3])
flat[i,] <- t(c(r,g,b))
}
shoes=as.data.frame(t(flat))
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
library(OpenImageR)
library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
library(ramify)
library(Matrix)
# set counter limit to 20
num = 20
# read jpegs into files list
(files = list.files('/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/',pattern="\\.jpg")[1:num])
height = 1200; width = 2500; scale = 20
plot_jpg = function(path, add = FALSE)
{ jpg = readJPEG(path,native = T)  # read the file
res = dim(jpg)[2:1]  # get the resolution, [x,y]
if (!add) # initialize an empty plot area if add == FALSE
plot(1,1,xlim = c(1,res[1]),ylim = c(1,res[2]),asp=1, type = 'n', xaxs='i',yaxs='i',xaxt='n',yaxt='n',xlab='',ylab='',bty='n')
rasterImage(jpg,1,1,res[1],res[2])
}
im=array(rep(0,length(files) * height/scale * width/scale*3), dim=c(length(files), height/scale, width/scale,3))
for (i in 1:20){
temp=resize(readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1])),height/scale, width/scale)
im[i,,,]=array(temp,dim=c(1, height/scale, width/scale,3))
}
flat=matrix(0,20,prod(dim(im)))
for (i in 1:20) {
newim <- readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1]))
r=as.vector(im[i,,,1]); g=as.vector(im[1,,,2]);b=as.vector(im[1,,,3])
flat[i,] <- t(c(r,g,b))
}
shoes=as.data.frame(t(flat))
par(mfrow=c(3,3))
par(mai=c(.3,.3,.3,.3))
for (i in 1:20){
plot_jpeg(writeJPEG(im[i,,,]))
}
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(RGL_USE_NULL=TRUE)
library(OpenImageR)
library(tidyverse)
library(matlib)
library(pracma)
library(jpeg)
library(ggplot2)
library(rasterImage)
library(shiny)
library(ramify)
library(Matrix)
# set counter limit to 20
num = 20
# read jpegs into files list
(files = list.files('/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/',pattern="\\.jpg")[1:num])
height = 1200; width = 2500; scale = 20
plot_jpeg = function(path, add = FALSE)
{ jpg = readJPEG(path,native = T)  # read the file
res = dim(jpg)[2:1]  # get the resolution, [x,y]
if (!add) # initialize an empty plot area if add == FALSE
plot(1,1,xlim = c(1,res[1]),ylim = c(1,res[2]),asp=1, type = 'n', xaxs='i',yaxs='i',xaxt='n',yaxt='n',xlab='',ylab='',bty='n')
rasterImage(jpg,1,1,res[1],res[2])
}
im=array(rep(0,length(files) * height/scale * width/scale*3), dim=c(length(files), height/scale, width/scale,3))
for (i in 1:20){
temp=resize(readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1])),height/scale, width/scale)
im[i,,,]=array(temp,dim=c(1, height/scale, width/scale,3))
}
flat=matrix(0,20,prod(dim(im)))
for (i in 1:20) {
newim <- readJPEG(paste0("/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/",files[1]))
r=as.vector(im[i,,,1]); g=as.vector(im[1,,,2]);b=as.vector(im[1,,,3])
flat[i,] <- t(c(r,g,b))
}
shoes=as.data.frame(t(flat))
par(mfrow=c(3,3))
par(mai=c(.3,.3,.3,.3))
for (i in 1:20){
plot_jpeg(writeJPEG(im[i,,,]))
}
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(jpeg)
library(OpenImageR)
library(Matrix)
# Initialization
# Set the file path directory of the jpg images
file_path <- "/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg"
shoe_test <- 4
# files = list.files('/Users/Audiorunner13/CUNY MSDS Course Work/DATA605 Fall 2022/Week 4/jpg/',pattern="\\.jpg")[1:num]
#  Read and Plot the first image (.jpg)
img <- jpeg::readJPEG(paste0(file_path,"/RC_2500x1200_2014_us_53446.jpg"))
dim(img)
# Save the row,col,channels dimension
( row_dim <- dim(img)[1] )
( col_dim <- dim(img)[2] )
( channel_dim <- dim(img)[3] )
# plot the image
imageShow(img)
# Read in all image files
# Read to a list all filenames in folder
filenames <- list.files(path=file_path,pattern = ".jpg")
# Initialize the matrix where all files will be stored
all_images_data <- matrix(0, length(filenames), prod(dim(img)))
# Show the dimensions of the matrix
